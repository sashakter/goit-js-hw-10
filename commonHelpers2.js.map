{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\".form\");\n\n\nform.addEventListener(\"submit\", evt => {\n    evt.preventDefault();\n    const currentDelayMs = parseInt(document.querySelector(\"input[name=delay]\").value, 10);\n    const isFulfilled = document.querySelector(\"input[value=fulfilled]\").checked;\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (isFulfilled) {\n            resolve(currentDelayMs);\n          } else {\n            reject(currentDelayMs);\n          }\n        }, currentDelayMs);\n      });\n      \n      // Registering promise callbacks\n      promise\n        .then(value => {\n            iziToast.success({\n                title: \"OK\",\n                message: `Fulfilled promise in ${value}`,\n                position: \"topRight\",\n            });\n        }) // \"Success! Value passed to resolve function\"\n        .catch(error => {\n            iziToast.error({\n                title: \"Error\",\n                message: `Rejected promise in ${error}`,\n                position: \"topRight\",\n            });\n        })\n});\n\n"],"names":["form","evt","currentDelayMs","isFulfilled","resolve","reject","value","iziToast","error"],"mappings":"+FAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAG3CA,EAAK,iBAAiB,SAAUC,GAAO,CACnCA,EAAI,eAAc,EAClB,MAAMC,EAAiB,SAAS,SAAS,cAAc,mBAAmB,EAAE,MAAO,EAAE,EAC/EC,EAAc,SAAS,cAAc,wBAAwB,EAAE,QACrD,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTF,EACJC,EAAQF,CAAc,EAEtBG,EAAOH,CAAc,CAExB,EAAEA,CAAc,CACzB,CAAO,EAIE,KAAKI,GAAS,CACXC,EAAS,QAAQ,CACb,MAAO,KACP,QAAS,wBAAwBD,CAAK,GACtC,SAAU,UAC1B,CAAa,CACb,CAAS,EACA,MAAME,GAAS,CACZD,EAAS,MAAM,CACX,MAAO,QACP,QAAS,uBAAuBC,CAAK,GACrC,SAAU,UAC1B,CAAa,CACb,CAAS,CACT,CAAC"}